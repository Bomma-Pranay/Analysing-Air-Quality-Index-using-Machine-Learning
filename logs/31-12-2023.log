2023-12-31 00:31:49,105 - __main__ - INFO - station=> nise gwal, result => ['172', 'NISE Gwal Pahari, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 00:31:49,106 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/nise_cron_output.csv, not appending.
2023-12-31 00:31:49,731 - __main__ - INFO - station=> Sector-51, Gurugram, result => ['187', 'Sector-51, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 00:31:49,731 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/sector_51_cron_output.csv, not appending.
2023-12-31 00:31:50,357 - __main__ - INFO - station=> Teri Gram, result => ['175', 'Teri Gram, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 00:31:50,358 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/teri_gram_cron_output.csv, not appending.
2023-12-31 00:31:50,997 - __main__ - INFO - station=> Vikas Sadan, result => ['161', 'Vikas Sadan Gurgaon, Gurgaon, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 00:31:50,997 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/vikas_sadan_cron_output.csv, not appending.
2023-12-31 00:31:50,998 - __main__ - INFO - datetime.now()=> 2023-12-31 00:31:50.998418
2023-12-31 01:50:40,150 - __main__ - INFO - station=> nise gwal, result => ['172', 'NISE Gwal Pahari, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 01:50:40,150 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/nise_cron_output.csv, not appending.
2023-12-31 01:50:40,632 - __main__ - INFO - station=> Sector-51, Gurugram, result => ['187', 'Sector-51, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 01:50:40,633 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/sector_51_cron_output.csv, not appending.
2023-12-31 01:50:41,118 - __main__ - INFO - station=> Teri Gram, result => ['175', 'Teri Gram, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 01:50:41,119 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/teri_gram_cron_output.csv, not appending.
2023-12-31 01:50:41,602 - __main__ - INFO - station=> Vikas Sadan, result => ['161', 'Vikas Sadan Gurgaon, Gurgaon, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 01:50:41,602 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/vikas_sadan_cron_output.csv, not appending.
2023-12-31 01:50:41,603 - __main__ - INFO - datetime.now()=> 2023-12-31 01:50:41.603727
2023-12-31 01:50:41,603 - __main__ - INFO - Calling writeData & retrain_model functions.
2023-12-31 01:50:41,609 - __main__ - INFO - df_api columns Index(['AQI'], dtype='object')
2023-12-31 01:50:41,610 - __main__ - INFO - today=> 2023-12-31 & yesterday=> 2023-12-30
2023-12-31 01:50:41,612 - __main__ - INFO - temp_daily_aqi columns Index(['Unnamed: 0', 'Date', 'AQI'], dtype='object')
2023-12-31 01:50:41,614 - __main__ - INFO - temp_daily_aqi[2023-12-30]=> Empty DataFrame
Columns: [Unnamed: 0, AQI]
Index: []
2023-12-31 01:50:41,615 - __main__ - INFO - Index => 1395, yesterday => 2023-12-30 & AQI => 197.0
2023-12-31 01:50:41,615 - __main__ - INFO - Daily AQI data has been written to data/cleaned_data/Forecasting_time_series/sector_51_daily_aqi.csv
2023-12-31 01:50:41,619 - __main__ - INFO - Re-training the model & train_end is 2023-12-25 00:00:00
2023-12-31 01:50:43,142 - __main__ - INFO - Retrained the model & MAPE is 15.28%
2023-12-31 01:50:44,759 - __main__ - INFO - Forecast=> 2023-12-31    188.069825
2024-01-01    193.033438
2024-01-02    199.747163
2024-01-03    199.293793
2024-01-04    206.746150
Freq: D, Name: predicted_mean, dtype: float64
2023-12-31 01:50:44,760 - __main__ - INFO - The forecast data has been written to data/cleaned_data/Forecasting_time_series/forecast_sector_51_daily_aqi.csv
2023-12-31 02:21:35,661 - __main__ - INFO - station=> nise gwal, result => ['172', 'NISE Gwal Pahari, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 02:21:35,661 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/nise_cron_output.csv, not appending.
2023-12-31 02:21:36,315 - __main__ - INFO - station=> Sector-51, Gurugram, result => ['187', 'Sector-51, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 02:21:36,315 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/sector_51_cron_output.csv, not appending.
2023-12-31 02:21:36,955 - __main__ - INFO - station=> Teri Gram, result => ['175', 'Teri Gram, Gurugram, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 02:21:36,956 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/teri_gram_cron_output.csv, not appending.
2023-12-31 02:21:37,579 - __main__ - INFO - station=> Vikas Sadan, result => ['161', 'Vikas Sadan Gurgaon, Gurgaon, India', Timestamp('2023-12-30 09:00:00')]
2023-12-31 02:21:37,579 - __main__ - INFO - Timestamp 2023-12-30 09:00:00 already present in data/cron_job_data/vikas_sadan_cron_output.csv, not appending.
2023-12-31 02:21:37,580 - __main__ - INFO - datetime.now()=> 2023-12-31 02:21:37.580775
2023-12-31 03:05:40,078 - __main__ - INFO - station=> nise gwal, result => ['208', 'NISE Gwal Pahari, Gurugram, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 03:05:40,079 - __main__ - INFO - The hourly data has been written to data/cron_job_data/nise_cron_output.csv with Timestamp: 2023-12-31 08:00:00
2023-12-31 03:05:40,554 - __main__ - INFO - station=> Sector-51, Gurugram, result => ['195', 'Sector-51, Gurugram, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 03:05:40,554 - __main__ - INFO - The hourly data has been written to data/cron_job_data/sector_51_cron_output.csv with Timestamp: 2023-12-31 08:00:00
2023-12-31 03:05:41,036 - __main__ - INFO - station=> Teri Gram, result => ['185', 'Teri Gram, Gurugram, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 03:05:41,036 - __main__ - INFO - The hourly data has been written to data/cron_job_data/teri_gram_cron_output.csv with Timestamp: 2023-12-31 08:00:00
2023-12-31 03:05:41,512 - __main__ - INFO - station=> Vikas Sadan, result => ['166', 'Vikas Sadan Gurgaon, Gurgaon, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 03:05:41,513 - __main__ - INFO - The hourly data has been written to data/cron_job_data/vikas_sadan_cron_output.csv with Timestamp: 2023-12-31 08:00:00
2023-12-31 03:05:41,514 - __main__ - INFO - datetime.now()=> 2023-12-31 03:05:41.514591
2023-12-31 04:07:28,141 - __main__ - INFO - station=> nise gwal, result => ['208', 'NISE Gwal Pahari, Gurugram, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 04:07:28,141 - __main__ - INFO - Timestamp 2023-12-31 08:00:00 already present in data/cron_job_data/nise_cron_output.csv, not appending.
2023-12-31 04:07:28,807 - __main__ - INFO - station=> Sector-51, Gurugram, result => ['195', 'Sector-51, Gurugram, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 04:07:28,807 - __main__ - INFO - Timestamp 2023-12-31 08:00:00 already present in data/cron_job_data/sector_51_cron_output.csv, not appending.
2023-12-31 04:07:29,526 - __main__ - INFO - station=> Teri Gram, result => ['185', 'Teri Gram, Gurugram, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 04:07:29,526 - __main__ - INFO - Timestamp 2023-12-31 08:00:00 already present in data/cron_job_data/teri_gram_cron_output.csv, not appending.
2023-12-31 04:07:30,231 - __main__ - INFO - station=> Vikas Sadan, result => ['166', 'Vikas Sadan Gurgaon, Gurgaon, India', Timestamp('2023-12-31 08:00:00')]
2023-12-31 04:07:30,231 - __main__ - INFO - Timestamp 2023-12-31 08:00:00 already present in data/cron_job_data/vikas_sadan_cron_output.csv, not appending.
2023-12-31 04:07:30,232 - __main__ - INFO - datetime.now()=> 2023-12-31 04:07:30.232300
2023-12-31 05:02:58,254 - __main__ - INFO - station=> nise gwal, result => ['204', 'NISE Gwal Pahari, Gurugram, India', Timestamp('2023-12-31 10:00:00')]
2023-12-31 05:02:58,255 - __main__ - INFO - The hourly data has been written to data/cron_job_data/nise_cron_output.csv with Timestamp: 2023-12-31 10:00:00
2023-12-31 05:02:58,946 - __main__ - INFO - station=> Sector-51, Gurugram, result => ['194', 'Sector-51, Gurugram, India', Timestamp('2023-12-31 10:00:00')]
2023-12-31 05:02:58,947 - __main__ - INFO - The hourly data has been written to data/cron_job_data/sector_51_cron_output.csv with Timestamp: 2023-12-31 10:00:00
2023-12-31 05:02:59,675 - __main__ - INFO - station=> Teri Gram, result => ['181', 'Teri Gram, Gurugram, India', Timestamp('2023-12-31 10:00:00')]
2023-12-31 05:02:59,676 - __main__ - INFO - The hourly data has been written to data/cron_job_data/teri_gram_cron_output.csv with Timestamp: 2023-12-31 10:00:00
2023-12-31 05:03:00,383 - __main__ - INFO - station=> Vikas Sadan, result => ['167', 'Vikas Sadan Gurgaon, Gurgaon, India', Timestamp('2023-12-31 10:00:00')]
2023-12-31 05:03:00,383 - __main__ - INFO - The hourly data has been written to data/cron_job_data/vikas_sadan_cron_output.csv with Timestamp: 2023-12-31 10:00:00
2023-12-31 05:03:00,384 - __main__ - INFO - datetime.now()=> 2023-12-31 05:03:00.384850
2023-12-31 06:07:27,901 - __main__ - INFO - station=> nise gwal, result => ['205', 'NISE Gwal Pahari, Gurugram, India', Timestamp('2023-12-31 11:00:00')]
2023-12-31 06:07:27,902 - __main__ - INFO - The hourly data has been written to data/cron_job_data/nise_cron_output.csv with Timestamp: 2023-12-31 11:00:00
2023-12-31 06:07:28,566 - __main__ - INFO - station=> Sector-51, Gurugram, result => ['193', 'Sector-51, Gurugram, India', Timestamp('2023-12-31 11:00:00')]
2023-12-31 06:07:28,566 - __main__ - INFO - The hourly data has been written to data/cron_job_data/sector_51_cron_output.csv with Timestamp: 2023-12-31 11:00:00
2023-12-31 06:07:29,237 - __main__ - INFO - station=> Teri Gram, result => ['181', 'Teri Gram, Gurugram, India', Timestamp('2023-12-31 11:00:00')]
2023-12-31 06:07:29,238 - __main__ - INFO - The hourly data has been written to data/cron_job_data/teri_gram_cron_output.csv with Timestamp: 2023-12-31 11:00:00
2023-12-31 06:07:29,926 - __main__ - INFO - station=> Vikas Sadan, result => ['171', 'Vikas Sadan Gurgaon, Gurgaon, India', Timestamp('2023-12-31 11:00:00')]
2023-12-31 06:07:29,926 - __main__ - INFO - The hourly data has been written to data/cron_job_data/vikas_sadan_cron_output.csv with Timestamp: 2023-12-31 11:00:00
2023-12-31 06:07:29,928 - __main__ - INFO - datetime.now()=> 2023-12-31 06:07:29.928045
