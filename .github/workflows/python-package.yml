name: Collect data

on:
  schedule:
    - cron: "*/60 * * * *"
  workflow_dispatch:

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  scrape-latest:
    runs-on: ubuntu-latest
    env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r ipynotebooks/Forecasting_time_series/requirements.txt
      - name: Set API token
        run: echo "API_TOKEN=${{ secrets.API_TOKEN }}" >> $GITHUB_ENV
      - name: Run the cron job script
        run: python ipynotebooks/Forecasting_time_series/cron_job.py
      # - name: Commit and push changes
      #   run: |
      #     git config --global user.email "action@github.com"
      #     git config --global user.name "GitHub Action"
      #     git add -A
      #     git commit -m "Update logs" || true
      #     git push          
      - name: Debug Info
        run: |
          echo "GitHub Workspace: $GITHUB_WORKSPACE"
          ls -al $GITHUB_WORKSPACE

      # - name: Commit and Push Changes
      #   uses: ad-m/push-to-github-action@v2
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff-index --quiet HEAD || (git commit -a -m "updated logs" --allow-empty)
          
      # - name: push changes
      #   uses: ad-m/github-push-action@v0.6.0
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: main 
